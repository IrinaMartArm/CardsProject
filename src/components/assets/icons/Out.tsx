import { forwardRef, memo } from 'react'

import { IconProps } from '@/utils/Types'

export const Out = memo(
  forwardRef<SVGSVGElement, IconProps>(({}, ref) => {
    return (
      <svg
        fill={'none'}
        height={'14'}
        ref={ref}
        viewBox={'0 0 24 24'}
        width={'14'}
        xmlns={'http://www.w3.org/2000/svg'}
        // xmlns:xlink={'http://www.w3.org/1999/xlink'}
      >
        <desc>Created with Pixso.</desc>
        <defs>
          <clipPath id={'clip5661_1838'}>
            <rect
              fill={'white'}
              fillOpacity={'0'}
              height={'24.000000'}
              id={'log-out'}
              width={'24.000000'}
            />
          </clipPath>
        </defs>
        <rect
          fill={'#FFFFFF'}
          fillOpacity={'0'}
          height={'24.000000'}
          id={'log-out'}
          width={'24.000000'}
        />
        <g clipPath={'url(#clip5661_1838)'}>
          <g opacity={'0.000000'}>
            <path
              d={'M24 0L24 24L0 24L0 0L24 0Z'}
              fill={'#FFFFFF'}
              fillOpacity={'1.000000'}
              fillRule={'evenodd'}
              id={'Vector'}
            />
          </g>
          <path
            d={
              'M7 6C7.26521 6 7.51958 5.89464 7.70711 5.70711C7.89464 5.51957 8 5.26522 8 5C8 4.73478 7.89464 4.48043 7.70711 4.29289C7.51958 4.10536 7.26521 4 7 4L5 4C4.73479 4 4.48042 4.10536 4.29289 4.29289C4.10536 4.48043 4 4.73478 4 5L4 19C4 19.2652 4.10536 19.5196 4.29289 19.7071C4.48042 19.8946 4.73479 20 5 20L7 20C7.26521 20 7.51958 19.8946 7.70711 19.7071C7.89464 19.5196 8 19.2652 8 19C8 18.7348 7.89464 18.4804 7.70711 18.2929C7.51958 18.1054 7.26521 18 7 18L6 18L6 6L7 6Z'
            }
            fill={'#FFFFFF'}
            fillOpacity={'1.000000'}
            fillRule={'nonzero'}
            id={'Vector'}
          />
          <path
            d={
              'M20.82 11.42L18 7.42C17.8471 7.20441 17.615 7.05814 17.3545 7.01317C17.0941 6.96819 16.8264 7.02817 16.61 7.18C16.5018 7.25578 16.4098 7.35224 16.3391 7.4638C16.2684 7.57536 16.2206 7.69982 16.1982 7.82998C16.1759 7.96014 16.1796 8.09344 16.2091 8.22217C16.2386 8.3509 16.2933 8.47252 16.37 8.58L18.09 11L10 11C9.73479 11 9.48042 11.1054 9.29289 11.2929C9.10536 11.4804 9 11.7348 9 12C9 12.2652 9.10536 12.5196 9.29289 12.7071C9.48042 12.8946 9.73479 13 10 13L18 13L16.2 15.4C16.1212 15.5051 16.0639 15.6246 16.0313 15.7518C15.9987 15.879 15.9915 16.0114 16.0101 16.1414C16.0286 16.2714 16.0726 16.3965 16.1395 16.5095C16.2064 16.6225 16.2949 16.7212 16.4 16.8C16.5731 16.9298 16.7836 17 17 17C17.1552 17 17.3084 16.9639 17.4472 16.8944C17.5861 16.825 17.7068 16.7242 17.8 16.6L20.8 12.6C20.9281 12.4309 20.999 12.2254 21.0026 12.0133C21.0062 11.8011 20.9423 11.5934 20.82 11.42Z'
            }
            fill={'#FFFFFF'}
            fillOpacity={'1.000000'}
            fillRule={'nonzero'}
            id={'Vector'}
          />
        </g>
      </svg>
    )
  })
)
